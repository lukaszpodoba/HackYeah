[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hackyeah"
dynamic = ["version"]
description = ""
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
  { name = "jakub.szulc", email = "szulcak05@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas>=2.0",
  "pyarrow>=14.0",
  "httpx>=0.27.0",
  "tenacity>=8.2.3",
  "pydantic>=2.7",
  "python-dotenv>=1.0.1",
  "mysqlclient>=2.2.0",
  "mysql-connector-python>=9.0.0",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.6.5",
  "black>=24.8.0",
  "pytest>=8.0.0",
  "pytest-cov>=5.0.0",
  "mypy>=1.10.0",
  "types-requests>=2.31.0.20240914",
]

[project.urls]
Documentation = "https://github.com/lukaszpodoba/HackYeah#readme"
Issues = "https://github.com/lukaszpodoba/HackYeah/issues"
Source = "https://github.com/lukaszpodoba/HackYeah"

[tool.hatch.version]
path = "src/hackyeah/__about__.py"

[tool.hatch.envs.default]
features = ["dev"]

[tool.hatch.envs.default.scripts]
lint = "ruff check src tests"
fmt = [
  "ruff check --select I --fix src tests",
  "ruff format src tests"
]
typecheck = "mypy --install-types --non-interactive {args:src/hackyeah tests}"
test = "pytest -q"
cov = "pytest --cov=hackyeah --cov-report=term-missing"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/hackyeah tests}"

[tool.coverage.run]
source_pkgs = ["hackyeah", "tests"]
branch = true
parallel = true
omit = [
  "src/hackyeah/__about__.py",
]

[tool.coverage.paths]
hackyeah = ["src/hackyeah", "*/hackyeah/src/hackyeah"]
tests = ["tests", "*/hackyeah/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP", "C4", "TID", "PL", "RUF"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["hackyeah"]
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true

[tool.black]
line-length = 100
target-version = ["py312"]
